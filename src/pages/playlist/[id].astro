---
import Layout from "@/layouts/Layout.astro";

import { Image } from "astro:assets";
import { allPlaylists, songs } from "@/lib/data";
import MusicsTable from "@/components/MusicsTable.astro";
import { CardPlayButton } from "@/components/react/CardPlayButton";

const { id } = Astro.params;

const playlist = allPlaylists.find((playlist) => playlist.id === id);
const playlistSongs = songs.filter(
  (song) => song.albumId === playlist?.albumId
);

function timeToSeconds(time: string): number {
  const parts = time.split(":");
  const minutes = parseInt(parts[0], 10);
  const seconds = parseInt(parts[1], 10);
  return minutes * 60 + seconds;
}

function secondsToTime(seconds: number): string {
  const hours = Math.floor(seconds / 3600);
  const minutes = Math.floor((seconds % 3600) / 60);
  const remainingSeconds = seconds % 60;

  if (hours > 0) {
    return `${hours}h ${minutes}m`;
  } else {
    return `${minutes}m ${remainingSeconds}s`;
  }
}

const durations: string[] = playlistSongs.map((song) => song.duration);
const totalSeconds: number = durations.reduce(
  (total, time) => total + timeToSeconds(time),
  0
);
const totalTime: string = secondsToTime(totalSeconds);
---

<Layout title="Play LAGN">
  <div
    id="playlist-container"
    class="relative flex flex-col h-full bg-zinc-900 overflow-x-hidden"
    transition:name=`playlist ${id} box`
  >
    <!-- <PageHeader /> -->

    <header class="flex flex-row gap-8 px-6 mt-12">
      <picture class="aspect-square w-52 h-52 flex-none">
        <Image
          src=`${playlist?.cover}`
          alt=`Cover of ${playlist?.title}`
          class="object-cover w-full h-full shadow-lg"
          transition:name=`playlist ${playlist?.id} image`
          inferSize={true}
          loading="eager"
        />
      </picture>

      <div class="flex flex-col justify-between">
        <h2 class="text-white flex flex-1 items-end">Playlist</h2>
        <div>
          <h1 class="text-5xl font-bold block text-white">
            {playlist?.title}
            <span transition:name=`playlist ${playlist?.id} title`></span>
          </h1>
        </div>

        <div class="flex-1 flex items-end">
          <div class="text-sm text-gray-300 font-normal">
            <div transition:name=`playlist ${playlist?.id} artists`>
              <span>{playlist?.artists.join(", ")}</span>
            </div>
            <p class="mt-1">
              <span class="text-white">{playlistSongs.length} canciones</span>, {
                totalTime
              } aproximadamente
            </p>
          </div>
        </div>
      </div>
    </header>

    <div class="pl-8 pt-4">
      <CardPlayButton id={id!.toString()} client:load size="large" />
    </div>

    <div class="relative z-10 px-6 pt-10"></div>

    <div
      class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80 -z-10"
    >
    </div>
    <section class="p-6">
      <MusicsTable songs={playlistSongs} playlist_id={id} />
    </section>
  </div>
</Layout>

<style></style>
